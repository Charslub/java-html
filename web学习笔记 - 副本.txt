HTML
<title>其中的文字会显示在网页的标题栏处
<span>没有具体语义专门用于设置样式
<em>（斜体）、<strong>（粗体）强调语句、关键词
<p>添加段落
<q>短文本的引用
<hx>(x=1、2、3.....)添加标题（标题分级一、二、三.....）
<blockquote>长文本的引用
<br/>用于提行
&nbsp；用于在网页中表示空格
html4.01版本 <hr>   xhtml1.0版本 <hr />
<hr>与<br>相同没有结束标签只有开始标签（即空标签）
<hr>为一条分割线
<address>为网页加上地址信息（默认为斜体字体）
<code>为在网页上显示代码
<pre> 标签的主要作用:预格式化的文本。即，将其中大段的代码在网页上输出
ul-li是没有前后顺序的信息列表(无序列表)
格式为：<ul>
	       <li>....</li>
               </ul>
ol-li是有前后顺序的信息列表格式与ul-li的相同
<div>用于划分逻辑部分（即，划分网页板块）
<div>的id属性使它变得独一无二（使用格式为：<div id="板块名称">....</div>）
建立表格整个由<table>开始
    <tbody>使用后可以优先加载模块，可以一部分一部分分段显示
    <tr>表示表格的行
    <td>则是表示列（一般的，<td>是在<tr>中表示的）
    <th>表格的头部单元格（会是粗体并居中显示）
    表格的框格即样式是由css进行编写的
    <table summary="表格简介文本">（表格摘要）
    <caption>标题显示（位置：表格上方）
<a>用于实现超链接（格式：<a  href="目标网址" title=“鼠标滑过显示的文字”>链接所显示的文本</a>）
mailto中的元素以及格式：   
    mailto： 邮箱地址（浏览器会跳出默认的邮件发送软件并自动填上收件人地址）
    cc= 抄送地址（自动填写抄送地址）
    bcc= 秘密抄送地址（自动填写秘密抄送地址）
    ;  分割多个收件人（可实现发送给多个收件人的目的）
    subject= 添加邮箱主题（格式与超链接相同）
    body= 添加邮件内容
    mailto后面若有多个参数则第一个参数由？打头之后的元素由&分隔
<img>用于在网页中插入图片（格式：<img src = "图片地址" alt="下载失败时替换的文本" title = "提示文本" />）
表单元素：
   <form   method=“传送方式” action="服务器文件">(【html表单form】 将浏览者输入的数据送到服务器端)传输数据实现用户与服务器之间的
    action 数据送达地址           method 输送的数据类型
    lable标签用于将光标聚集再选中的控件上：
        其中的for的属性要与相关控件的id属性相同
input中的元素：
    type=“”（当引号中为text时为文本输入框；为password时为密码输入框）
    name为文本框命名           value为文本框输入默认值
文本输入域：（当有大量未知行数的文字需要输入时使用）
    语法：<textarea  rows="行数" cols="列数">文本</textarea>
    cols多行输入区域的列数
    rows多行输入区域的行数
    对文本域的设置需要写在前面的<textarea>中
选择框
    type="（此中为radio时控件为单选框；checkbox时为复选框）"
    value同样是数据提交地址
    name为控件命名
    checked当check设置为checked="checked"时该选项被默认选中
    若想要是选择框达到单选目的要将name的值设置为一致
下拉列表：
    <option value="提交值(向服务器提交的值)">选项（显示的值）</option>
    selected="selected"默认下拉菜单选中
    select标签中还可以设置multiple="multiple"属性（实现多选功能） 【使用Crtl然后多次单击可选中多个目标(windows中)】
按钮：    
    提交按钮需要设置type为submit（即，type="sublmit"  value="提交"【这里设置的是按扭的文字】）
    重置按钮则是将type设置为reset表达方式与上面的的提交按钮格式相同




CSS（用于设置样式）
（嵌入式）设置样式的<style>推荐将其放在<head>中，且要设置<style>时需要加入type并设置为css（即，type=“text/css”）
基本的字体设置要使用p{}将其中的设置括起
    font-size(设置字体字号)
    color(设置字体颜色)
    font-weight(设置字体是否加粗倾斜)
    border设置边框线（可设置边框粗细、颜色、实虚）
<span>用于设置统一格式
(即，在style中设置span的样式后之后再次使用span就可以使用span的格式，但在设置span时应该将span当作选择符与p的用法相同）
选择符【p、span】其中的声明使用“；”分开声明中的属性与值使用“：”隔开
css中的注释与HTML的不同（/*.......*/）
css中的（内联式）：
    <p style="">文字</p>这类写法可将单独的语句设置为style的样式（其中的声明同样是由；隔开）
css的（外联式）：
    <link href="所要链接的外部文件名字（例：base.css）" rel="stylesheet" type="text/css" />（此类设置也需要写入head）
样式也有优先级（内联式>嵌入式>外部式）
嵌入式>外部式(前提是嵌入式代码在外部式后面)【就近原则（离被设置元素越近优先级别越高）】
{}前面的部分为选择器（HTML代码中的标签），即选择需要调整格式的部分
类选择器：
    .类选择器（名字不可为中文）{css样式代码；}【设置之后HTML代码中则可以直接调用，类似于调用函数】
    (例：.stress{color:red;}     <span class="stress">胆小如鼠</span>)
    若有两个类选择器一起使用时只需使用空格隔开ID选择器则不可这样使用
ID选择器：
    类似于类选择器但不同在于ID选择器开头为#
    ID选择器只可以命名一个库（即，只可以使用一次）与类不同
子选择器：
    .类名称>li{.....}这样就将类名下的子元素的样式进行设置了使用方法为在父类声明class从而设置子类
    只作用于直接后代（第一代）
包含（后代）选择器：
    包含选择器，即加入空格,用于选择指定标签元素下的后辈元素（.类名 后辈元素{设置样式}）
    作用于所有子后代
通用选择器：
    由一个*指定作用于HTML的所有标签元素（即，*{设置的文字样式}）
伪类选择符：
    给不可直接存在的标签进行样式的编写（即，鼠标滑过所产生的效果）
    格式为：标签名：hover{编写的文字格式}（常用的标签为a【超链接】）
分组选择符：
    使用“，”将多个标签分开并同时设置多个标签
    可将不同的选择器通过分组选择器合并在一起
css的继承：文字的字体以及颜色和大小都具有继承性但像边框类的则无继承性
特殊性：标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100（优先性由权值高低来决定）
层叠：即在权值相同的情况下，写在后面的格式会将前面的格式覆盖
重要性：在加上 !important 之后权值会变为最高权值（！！！注意 !important 要写在设置文字格式的“；”前方）
格式化排版
    font-family可对网页的所有文字的字体进行设置（一般使用微软雅黑字体，可以使用中文设置但是英文设置兼容性更高）
    font-size(设置字体字号)
    color(设置字体颜色)[ps：颜色的设置可以缩写(例如#000000可以缩写为#000//#336699可缩写为369)]
    font-weight(设置字体是否加粗【bold】下划线【】删除线【】)
    border设置边框线（可设置边框粗细、颜色、实虚）
    font-style(设置文字风格倾斜【italic】)
    text-decoration：underline(设置文字为下划线)
    text-decoration：line-through(设置文字加上删除线格式)
    text-indent：缩进所需字节数(例如：2em)
    段落排版--行间距(行高):line-height:1.5em[示例]
    段落排版-中文字、字母间距:(字母与字母 文字与文字)letter-spacing:间隔大小;[px计数]；(单词与单词)word-spacing:间隔大小[px计数];
    段落排版-对齐:使用text-align设置[可设置居中(center)、靠左(left)、靠右(right)]
元素分类
    内联元素:<a>、<span>、<br>、<i>、<em>、<strong>、<label>、<q>、<var>、<cite>、<code>
    块级元素:<div>、<p>、<h1>...<h6>、<ol>、<ul>、<dl>、<table>、<address>、<blockquote> 、<form>
    内联块状元素:<input>、<img>
元素转化:将非块级元素转换为块级元素(使用display:block;)display可以将任意元素进行转换[内联为inline]
块级元素的特点:
    独占一行
    元素的高度、宽度、行高、底边距以及顶边距都可以更改设置
    宽度默认为其父容器的100%(可设置)
内联元素的特点:
    与其余元素在同一行上
    元素的高宽度、底部顶部的边距均不可设置
内联块状元素的特点:
    同时具备块状元素与内联元素的特点
    与其余元素在同一行
    元素的高度、宽度、行高以及顶底边距都可以设置
盒模型
    padding(内填充)、border(边框)、margin(外边距)
    都具有四个方向:top、bottom、left、right
    实际高宽度都是内容+内填充+边框+边距距离
    border:
        border[有三个元素粗细(px像素计数)、实虚(dashed[虚线]、solid、[点线]dotted)、颜色]
        其四个方向，调用方向之后只会显示相应方向的边框
        （边框实例： border:2px  solid  red;）
    padding:
        填充设置的默认顺序为上、右、下、左(margin、padding、border的设置顺序都与此一致)
        若边框距离都相等则直接设置一个像素(例如:padding:10px;)
        若上下与左右相同则直接:padding:10px 20px;
        [ps:缩写的方式三种属性的写法都相同]
    border:
         与padding的写法相同
css布局
    一共有三个模型：流动(Flow)、浮动(Float)、层模型(Layer)
流动模型
    默认的网页布局模式
    块状元素会处在包含元素内自上而下按顺序垂直延伸分布且都是以行的形式占据位置 
    在此模型中内联元素都是以水平方向从左到右排列都位于同一行中
浮动模型
    可使用此模型让块级元素并排显示(float:left/right;)
层模型
    有三种形式:绝对定位、相对定位、固定定位
    绝对定位:
        要使用该定位时需要设置position:absolute
        这条语句的作用将元素从文档流中拖出来，然后使用left、right、top、bottom属性相对于其最接近的一个具有定位属性的父包含块进行绝对定位。
如果不存在这样的包含块，则相对于body元素，即相对于浏览器窗口。（即，会相对一个父对象进行设置）
        在设置绝对定位后再使用left、right、top、bottom对位置进行调整（例:left：100px）
    相对定位（relative）
        相对定位是相对于该模块以前原本的位置而言的移动
        且在移动过后原本的位置还是仍然保留之后再加上的元素还是会留在原本的位置
    固定定位（fixed）
        其相对移动的目标为示图(屏幕内的网页窗口) [即，可根据网页窗口大小改变位置使其仍然留在视图框内并不改变滑轮位置]
        且不随滚轮的滑动而离开界面
    相对定位与绝对定位的共同使用
        首先要拥有父子嵌套结构：
        [<div id="box1"><!--参照定位的元素-->
              <div id="box2">相对参照元素进行定位</div><!--相对定位元素-->
        </div>]
         书写的结构为:先在父元素(即参照定位)中添加relative，再在子元素(相对参照定位)中添加absolute
缩写
    字体设置缩写:可将字体的属性设置缩写为[font:.....]缩写时至少要指定size和family的属性其余未设置则将使用默认值
    字体缩写设置时size与height中间应加上“/”
    Sans-serif是专指西文中 没有衬线的字体，与汉字字体中的黑体相对应。[设置时最好加上该字体防止系统无前方设置的字体保证字体设置的调用] 
    小型大写字母(英语:small capitals,简称small caps)是西文字体设计中的一种字符形式。
长度值(单位)
    像素(px)[90px=1英寸]
    em[1em=18px]
    还可以使用百分比设置但是是设置字体大小以外的属性(例如:行高可设置为字体大小的130%)
水平居中的设置
    行内元素:
         若被设置的元素为文本或者图片等行内元素时，其设置水平居中是使用text-align：center来实现的
    定宽块状元素:(width一定要设置)
         设置元素为块状元素时上面的办法则不可使其水平居中
         块状元素又分为定宽、不定宽两种块状元素
         定宽时则使用margin:auto(左右)来实现         
    不定宽元素:（width不确定即未设置）
         加入table标签[其标签为自适应形，即其长度由其中的文本长度所决定，则可将其看做定宽元素]
         设置display:inline方法以上种方法相似都是将不定块状元素转换为行内元素
         设置position:relative与left:50%使其向左偏移50%
         若是加入table方法则需将<table><tbody><tr><td>按照此顺序包裹需要居中的元素外部，再使用margin:0 auto;将margin左右居中
         第二种方式第一步先将块级元素外部进行居中(即，在其父元素加入text-align:center)，再将内部的块级元素使用display:inline;将块状元素(七中的所有元素都要设置)转化为行内元素
         方法三则是通过给父元素设置 float:left;，然后给父元素设置 position:relative 和 left:50%，子元素设置 position:relative 和 left: -50% 来实现水平居中。 
垂直居中
    父元素高度确定的单行文本
         设置父元素的height(该元素的高度)和line-height一致   
    父元素高度确定的多行文本
         方法一：插入table(包括tbody、tr、td)标签，同时设置vertical-align:middle[在父元素处设置时对inline-block类型的子元素都有用]
         方法二：设置其父元素插入display:table-cell;(将其转换为内联元素)与vertical-align:middle;【兼容性较差】    
隐性改变display类型
     改变元素的类型加入:position:absolute;与float:leftl;或float:right;就可将元素类型强制改变为块状元素



网页布局
    一列布局
    两列布局（自适应）
        左浮动（float:left;）右浮动（float:right;）
    三列布局（自适应）
    混合布局
         clear清除【clear 属性规定元素的哪一侧不允许其他浮动元素。】
导航菜单
    text-indent文本缩进
    margin-top可以通过赋予其负值从而让被设置的模块向上移动








